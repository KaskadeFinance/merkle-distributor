/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleDistributor,
  MerkleDistributorInterface,
} from "../MerkleDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previousRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "UpdateMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620010d7380380620010d78339810160408190526200003491620001bd565b600080546001600160a01b03191633908117825560405190918291600080516020620010b7833981519152908290a3506001600160601b0319606084901b16608052600182905562000086816200008f565b505050620001fd565b6000546001600160a01b03163314620000ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000e6565b600080546040516001600160a01b0380851693921691600080516020620010b783398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620001b857600080fd5b919050565b600080600060608486031215620001d2578283fd5b620001dd84620001a0565b925060208401519150620001f460408501620001a0565b90509250925092565b60805160601c610e7f6200023860003960008181610175015281816102f301528181610523015281816105f101526106e90152610e7f6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639e281a98116100665780639e281a98146101145780639e34070f14610127578063a878aee61461014a578063f2fde38b1461015d578063fc0c546a1461017057600080fd5b80632e7ba6ef146100a35780632eb4a7ab146100b85780634783f0ef146100d4578063715018a6146100e75780638da5cb5b146100ef575b600080fd5b6100b66100b1366004610c9e565b610197565b005b6100c160015481565b6040519081526020015b60405180910390f35b6100b66100e2366004610c6e565b61036a565b6100b66103d7565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b6100b6610122366004610c25565b61044b565b61013a610135366004610c6e565b61065b565b60405190151581526020016100cb565b6100b6610158366004610c0b565b61069c565b6100b661016b366004610c0b565b610766565b6100fc7f000000000000000000000000000000000000000000000000000000000000000081565b6101a08561065b565b156102035760405162461bcd60e51b815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2044726f7020616c72656164792060448201526731b630b4b6b2b21760c11b60648201526084015b60405180910390fd5b60408051602081018790526bffffffffffffffffffffffff19606087901b16918101919091526054810184905260009060740160405160208183030381529060405280519060200120905061028f838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610850565b6102e55760405162461bcd60e51b815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f666044820152601760f91b60648201526084016101fa565b6102ee86610910565b6103197f0000000000000000000000000000000000000000000000000000000000000000868661094e565b604080518781526001600160a01b03871660208201529081018590527f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269060600160405180910390a1505050505050565b6000546001600160a01b031633146103945760405162461bcd60e51b81526004016101fa90610d7f565b600154604080519182526020820183905233917f8b67e84be49a1952e3818ead1025bf3a2299ec901780204d0dec64678b235287910160405180910390a2600155565b6000546001600160a01b031633146104015760405162461bcd60e51b81526004016101fa90610d7f565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104755760405162461bcd60e51b81526004016101fa90610d7f565b6001600160a01b0382166104cb5760405162461bcd60e51b815260206004820152601e60248201527f746f206164647265737320697320746865207a65726f2061646472657373000060448201526064016101fa565b6000811161050c5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101fa565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561056d57600080fd5b505afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190610c86565b10156105ec5760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b60448201526064016101fa565b6106177f0000000000000000000000000000000000000000000000000000000000000000838361094e565b6040518181526001600160a01b0383169033907f037238854fe57fbf51f09946f854fc3916fe83938d6521f09bd05463839f13049060200160405180910390a35050565b60008061066a61010084610db4565b9050600061067a61010085610e1f565b60009283526002602052604090922054600190921b9182169091149392505050565b6000546001600160a01b031633146106c65760405162461bcd60e51b81526004016101fa90610d7f565b6040516370a0823160e01b81523060048201526107639082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101229190610c86565b50565b6000546001600160a01b031633146107905760405162461bcd60e51b81526004016101fa90610d7f565b6001600160a01b0381166107f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fa565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081815b855181101561090357600086828151811061088057634e487b7160e01b600052603260045260246000fd5b60200260200101519050808310156108c35760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506108f0565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806108fb81610df8565b915050610855565b50831490505b9392505050565b600061091e61010083610db4565b9050600061092e61010084610e1f565b6000928352600260205260409092208054600190931b9092179091555050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109a09084906109a5565b505050565b60006109fa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a779092919063ffffffff16565b8051909150156109a05780806020019051810190610a189190610c4e565b6109a05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101fa565b6060610a868484600085610a8e565b949350505050565b606082471015610aef5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101fa565b843b610b3d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101fa565b600080866001600160a01b03168587604051610b599190610d30565b60006040518083038185875af1925050503d8060008114610b96576040519150601f19603f3d011682016040523d82523d6000602084013e610b9b565b606091505b5091509150610bab828286610bb6565b979650505050505050565b60608315610bc5575081610909565b825115610bd55782518084602001fd5b8160405162461bcd60e51b81526004016101fa9190610d4c565b80356001600160a01b0381168114610c0657600080fd5b919050565b600060208284031215610c1c578081fd5b61090982610bef565b60008060408385031215610c37578081fd5b610c4083610bef565b946020939093013593505050565b600060208284031215610c5f578081fd5b81518015158114610909578182fd5b600060208284031215610c7f578081fd5b5035919050565b600060208284031215610c97578081fd5b5051919050565b600080600080600060808688031215610cb5578081fd5b85359450610cc560208701610bef565b935060408601359250606086013567ffffffffffffffff80821115610ce8578283fd5b818801915088601f830112610cfb578283fd5b813581811115610d09578384fd5b8960208260051b8501011115610d1d578384fd5b9699959850939650602001949392505050565b60008251610d42818460208701610dc8565b9190910192915050565b6020815260008251806020840152610d6b816040850160208701610dc8565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082610dc357610dc3610e33565b500490565b60005b83811015610de3578181015183820152602001610dcb565b83811115610df2576000848401525b50505050565b6000600019821415610e1857634e487b7160e01b81526011600452602481fd5b5060010190565b600082610e2e57610e2e610e33565b500690565b634e487b7160e01b600052601260045260246000fdfea26469706673582212202722583ae85f3e10a69faa9c5231086863d7a888c47c676b453ee97a2c85f91164736f6c634300080400338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class MerkleDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleDistributor> {
    return super.deploy(
      token_,
      merkleRoot_,
      owner_,
      overrides || {}
    ) as Promise<MerkleDistributor>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      merkleRoot_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): MerkleDistributor {
    return super.attach(address) as MerkleDistributor;
  }
  connect(signer: Signer): MerkleDistributor__factory {
    return super.connect(signer) as MerkleDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDistributorInterface {
    return new utils.Interface(_abi) as MerkleDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDistributor {
    return new Contract(address, _abi, signerOrProvider) as MerkleDistributor;
  }
}
