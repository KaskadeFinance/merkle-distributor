/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleDistributor,
  MerkleDistributorInterface,
} from "../MerkleDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "airdropAmount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previousRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "UpdateMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200105938038062001059833981016040819052610031916101b3565b600080546001600160a01b0319163390811782556040519091829160008051602062001039833981519152908290a3506001600160601b0319606084901b16608052600182905561008181610089565b5050506101ee565b6000546001600160a01b031633146100e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661014d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100df565b600080546040516001600160a01b03808516939216916000805160206200103983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b03811681146101ae57600080fd5b919050565b6000806000606084860312156101c7578283fd5b6101d084610197565b9250602084015191506101e560408501610197565b90509250925092565b60805160601c610e10620002296000396000818161017201528181610314015281816105470152818161061d01526106d50152610e106000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639e281a98116100665780639e281a9814610114578063a878aee614610127578063dbe7e3bd1461013a578063f2fde38b1461015a578063fc0c546a1461016d57600080fd5b80632e7ba6ef146100a35780632eb4a7ab146100b85780634783f0ef146100d4578063715018a6146100e75780638da5cb5b146100ef575b600080fd5b6100b66100b1366004610c4c565b610194565b005b6100c160015481565b6040519081526020015b60405180910390f35b6100b66100e2366004610c1c565b61038e565b6100b66103fb565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b6100b6610122366004610bd3565b61046f565b6100b6610135366004610bb9565b610688565b6100c1610148366004610c1c565b60026020526000908152604090205481565b6100b6610168366004610bb9565b610752565b6100fc7f000000000000000000000000000000000000000000000000000000000000000081565b6000858152600260205260409020548084116102085760405162461bcd60e51b815260206004820152602860248201527f4d65726b6c654469737472696275746f723a2061697264726f70206c696d6974604482015267081c995858da195960c21b60648201526084015b60405180910390fd5b60408051602081018890526bffffffffffffffffffffffff19606088901b16918101919091526054810185905260009060740160405160208183030381529060405280519060200120905061029484848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600154915084905061083c565b6102ea5760405162461bcd60e51b815260206004820152602160248201527f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f666044820152601760f91b60648201526084016101ff565b60008781526002602052604081208690556103058387610d62565b905061033b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001688836108fc565b604080518981526001600160a01b03891660208201529081018290527f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269060600160405180910390a15050505050505050565b6000546001600160a01b031633146103b85760405162461bcd60e51b81526004016101ff90610d2d565b600154604080519182526020820183905233917f8b67e84be49a1952e3818ead1025bf3a2299ec901780204d0dec64678b235287910160405180910390a2600155565b6000546001600160a01b031633146104255760405162461bcd60e51b81526004016101ff90610d2d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104995760405162461bcd60e51b81526004016101ff90610d2d565b6001600160a01b0382166104ef5760405162461bcd60e51b815260206004820152601e60248201527f746f206164647265737320697320746865207a65726f2061646472657373000060448201526064016101ff565b600081116105305760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74206973207a65726f60901b60448201526064016101ff565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561059157600080fd5b505afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190610c34565b10156106105760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b60448201526064016101ff565b6106446001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836108fc565b6040518181526001600160a01b0383169033907f037238854fe57fbf51f09946f854fc3916fe83938d6521f09bd05463839f13049060200160405180910390a35050565b6000546001600160a01b031633146106b25760405162461bcd60e51b81526004016101ff90610d2d565b6040516370a0823160e01b815230600482015261074f9082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561071757600080fd5b505afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101229190610c34565b50565b6000546001600160a01b0316331461077c5760405162461bcd60e51b81526004016101ff90610d2d565b6001600160a01b0381166107e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ff565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081815b85518110156108ef57600086828151811061086c57634e487b7160e01b600052603260045260246000fd5b60200260200101519050808310156108af5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506108dc565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806108e781610da9565b915050610841565b50831490505b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261094e908490610953565b505050565b60006109a8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a259092919063ffffffff16565b80519091501561094e57808060200190518101906109c69190610bfc565b61094e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101ff565b6060610a348484600085610a3c565b949350505050565b606082471015610a9d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101ff565b843b610aeb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101ff565b600080866001600160a01b03168587604051610b079190610cde565b60006040518083038185875af1925050503d8060008114610b44576040519150601f19603f3d011682016040523d82523d6000602084013e610b49565b606091505b5091509150610b59828286610b64565b979650505050505050565b60608315610b735750816108f5565b825115610b835782518084602001fd5b8160405162461bcd60e51b81526004016101ff9190610cfa565b80356001600160a01b0381168114610bb457600080fd5b919050565b600060208284031215610bca578081fd5b6108f582610b9d565b60008060408385031215610be5578081fd5b610bee83610b9d565b946020939093013593505050565b600060208284031215610c0d578081fd5b815180151581146108f5578182fd5b600060208284031215610c2d578081fd5b5035919050565b600060208284031215610c45578081fd5b5051919050565b600080600080600060808688031215610c63578081fd5b85359450610c7360208701610b9d565b935060408601359250606086013567ffffffffffffffff80821115610c96578283fd5b818801915088601f830112610ca9578283fd5b813581811115610cb7578384fd5b8960208260051b8501011115610ccb578384fd5b9699959850939650602001949392505050565b60008251610cf0818460208701610d79565b9190910192915050565b6020815260008251806020840152610d19816040850160208701610d79565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610d7457610d74610dc4565b500390565b60005b83811015610d94578181015183820152602001610d7c565b83811115610da3576000848401525b50505050565b6000600019821415610dbd57610dbd610dc4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b5d9ff83c8a9ca7528e656bf64b7f5646261b5b9599f72b27807c215eb0cc0ad64736f6c634300080400338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class MerkleDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleDistributor> {
    return super.deploy(
      token_,
      merkleRoot_,
      owner_,
      overrides || {}
    ) as Promise<MerkleDistributor>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token_,
      merkleRoot_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): MerkleDistributor {
    return super.attach(address) as MerkleDistributor;
  }
  connect(signer: Signer): MerkleDistributor__factory {
    return super.connect(signer) as MerkleDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDistributorInterface {
    return new utils.Interface(_abi) as MerkleDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDistributor {
    return new Contract(address, _abi, signerOrProvider) as MerkleDistributor;
  }
}
